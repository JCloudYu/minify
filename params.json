{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Minify","body":"Minify [![Build Status](https://secure.travis-ci.org/coderaiser/minify.png?branch=master)](http://travis-ci.org/coderaiser/minify)\r\n======\r\n\r\n**Minify** - a minifier of js, css, html and img files,\r\nused in [Cloud Commander](http://github.com/coderaiser/cloudcmd \"Cloud Commander\")\r\nproject.\r\n\r\nInstall\r\n---------------\r\nYou can install minify just like that:\r\n\r\n    npm i minify\r\nor\r\n    \r\n    git clone git://github.com/coderaiser/minify\r\n\r\nAPI\r\n---------------\r\n**Minify** module contains some api for interacting from another js files.\r\n\r\nTo use **Minify** functions it sould be connected first. It's doing like always.\r\n```js\r\nminify = require('minify');\r\n```\r\nAll of minification functions save files in **./min** directory with\r\nextension **.min** (*.min.js, *.min.css, *.min.html).\r\nIf directory could be created **minify.MinFolder** would countain stirng 'min/',\r\nin any other case - '/'.\r\n\r\n**optimize**(*pFiles_a*, *pCache_b*) - function which minificate js, html and\r\ncss-files.\r\n - **pFiles_a**                     - varible, wich contain array of file\r\nnames or string, if name single.\r\n - **pOptions**(optional)           - object contain main options.\r\n\r\n```js\r\npOptions = {cache: false, callback: func(){}};\r\n```\r\n\r\nif cache true - files do not writes on disk, just saves in Minify Cache.\r\n\r\n**Examples**:\r\n\r\n```js\r\nminify.optimize('client.js');\r\n```\r\n\r\n```js\r\nminify.optimize('client.js', {cache: true, callback: func(pMinData){}});\r\n```\r\n\r\nif a couple files:\r\n```js\r\nminify.optimize(['client.js',\r\n    'style.css']);\r\n```\r\n\r\nif post processing needed \r\n```js\r\nminify.optimize({\r\n    'client.js' : function(pFinalCode){}\r\n});\r\n```\r\n\r\nif post image converting needed (works with css only)\r\n```js\r\nminify.optimize([{'style.css':true},\r\n    'index.html']);\r\n```    \r\n\r\nif no need to write on disk\r\n```js\r\nminify.optimize('client.js', {\r\n    'client.js' : function(pFinalCode){}\r\n},true);\r\n```\r\n\r\nThen we can work with js data just like this:\r\n```js\r\nconsole.log(minify.Cache['client.js']);\r\n```\r\n\r\n**MinFolder** - varible thet contains folder name, where minimized files stored.\r\n                (could not be changed for now).\r\n                \r\nAdditional modules:\r\n---------------\r\n- [UglifyJS] (https://github.com/mishoo/UglifyJS)\r\n- [clean-css] (https://github.com/GoalSmashers/clean-css)\r\n- [html-minifier] (https://github.com/kangax/html-minifier)\r\n- [css-b64-images] (https://github.com/Filirom1/css-base64-images)\r\n\r\nInstall addtitional modules:\r\n\r\n    npm i uglify-js clean-css html-minifier css-b64-images","tagline":"Minifier of js, css, html and img","google":"UA-33536569-4"}